/************************************************************************************* Author: Bruno Ribeiro && Rob.OT************************************************************************************/function addRow(line,__c){		fl.reloadTools();	fl.synchronizeDocumentWithHeadVersion();			var doc = fl.getDocumentDOM();	fl.outputPanel.clear();		doc.addDataToDocument("numColumns", "string", __c);		var tileSample;	var physicsSample;	var currentLine = line;	var columns = __c;	var lib = fl.getDocumentDOM().library		var len = lib.items.length;	for(var i = 0; i < len; i++)	{		var item = lib.items[i];		if(item.name.indexOf("TileModel") >= 0)		{			tileSample = item;		}		else if(item.name.indexOf("PhysicsModel") >= 0)		{			physicsSample = item;		}				if(physicsSample && tileSample)			break;	}		//currentLine = -1;//	//	//check last item added//	for(var i = 0; i < len; i++)//	{//		if(lib.itemExists("-tiles/Tile"+i+"_0"))//		{//			currentLine = i;//		}//		else//		{//			break;//		}//	}		//currentLine = currentLine+1;		var currentLine = currentLine;	for(var i = 0; i < columns; i++)	{		lib.duplicateItem(tileSample.name);		var tileItem = lib.getSelectedItems()[0];		lib.renameItem("Tile"+currentLine+"_"+i);		//tileItem.linkageExportForAS = true;		tileItem.linkageIdentifier = "Tile"+currentLine+"_"+i;		tileItem.linkageClassName = "Tile"+currentLine+"_"+i;		lib.updateItem(tileItem.name);		lib.selectNone();						lib.duplicateItem(physicsSample.name);		var itemPhysics  = lib.getSelectedItems()[0];		lib.renameItem("tile"+currentLine+"_"+i+"_ph");		//itemPhysics.linkageExportForAS = true;		//itemPhysics.linkageIdentifier = "tile"+currentLine+""+i+"_ph";		itemPhysics.linkageClassName = "tile"+currentLine+"_"+i+"_ph";		lib.updateItem(itemPhysics.name);				for(var j = 0; j < tileItem.timeline.layerCount; j++)		{			for(var k = 0; k < tileItem.timeline.layers[j].frames[0].elements.length; k ++)			{				var element = tileItem.timeline.layers[j].frames[0].elements[k]							if(element.name.indexOf("physics_mc") >=0)				{										if( element.libraryItem.linkageClassName == "PhysicsModel")					{												element.libraryItem = lib.getSelectedItems()[0];						//element.swapElement(itemPhysics.name);					}				}							}		}				lib.selectNone();	}		//doc.save();}function getColumns () {	var doc = fl.getDocumentDOM();	if(doc)	{		var abs = null;		if(doc.documentHasData("numColumns"))		{			abs = doc.getDataFromDocument("numColumns");		}		else		{			abs = 8;		}				return abs;	}	}var line = 30for(var i = 0; i < 15; i ++){	addRow(line+i,6)		}